<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- mvn mybatis-generator:generate -e -->
<generatorConfiguration>
    <properties resource="generator/config.properties"/>

    <!-- defaultModelType="flat" 大数据字段，不分表 -->
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!-- caseSensitive 是否区分大小写，默认值 false。如果数据库区分大小写，这里就需要配置为 true，这样当表名为 USER 时，会生成 @Table(name = "USER") 注解，否则使用小写 user 时会找不到表。 -->
            <property name="caseSensitive" value="true"/>
            <!--生成字段常量-->
            <property name="generateColumnConsts" value="true"/>
            <!--强制生成注解-->
            <property name="forceAnnotation" value="true"/>
            <property name="lombok" value="Data"/>
        </plugin>

        <jdbcConnection driverClass="${jdbc.driver-class-name}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
        </jdbcConnection>

        <javaTypeResolver type="com.phoenix.common.util.JavaTypeResolverImpl">
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- 实体 -->
        <javaModelGenerator targetPackage="com.vova.phoenix.model.po.entity" targetProject="src/main/java"/>

        <!-- mapper.xml -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources"/>

        <!-- mapper接口 -->
        <javaClientGenerator targetPackage="com.vova.phoenix.mapper" targetProject="src/main/java" type="XMLMAPPER"/>

        <table tableName="admin_user">
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
            <columnOverride column="app_platform_list" javaType="java.util.List&lt;String&gt;"/>
            <columnOverride column="message_type_list" javaType="java.util.List&lt;String&gt;"/>
        </table>
        <table tableName="admin_node">
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
        </table>
        <table tableName="admin_user_node">
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
            <columnOverride column="node_id_list" javaType="java.util.List&lt;Integer&gt;"/>
        </table>
        <table tableName="task_config">
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
            <columnOverride column="target_tag" javaType="com.vova.phoenix.model.po.json.TaskConfigTargetTag"/>
            <columnOverride column="countries" javaType="java.util.List&lt;String&gt;"/>
            <columnOverride column="extra" javaType="com.vova.phoenix.model.po.json.TaskConfigExtra"/>
        </table>
    </context>
</generatorConfiguration>
